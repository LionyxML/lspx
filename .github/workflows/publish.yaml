name: Publish

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - aarch64-unknown-linux-gnu
          - aarch64-apple-darwin

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Get Version
        id: vars
        run: echo ::set-output name=version::$(echo ${{ github.ref_name }} | sed 's/^v//')

      - name: Build JSR
        run: deno task build:jsr ${{ steps.vars.outputs.version }}

      - name: Compile Binary
        run: |
          mkdir -p dist
          deno compile --target ${{ matrix.target }} --output dist/lspx-${{ matrix.target }} main.ts
          [[ "${{ matrix.target }}" == *"windows"* ]] && mv dist/lspx-${{ matrix.target }} dist/lspx-${{ matrix.target }}.exe
        continue-on-error: false

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lspx-${{ matrix.target }}
          path: dist/*
